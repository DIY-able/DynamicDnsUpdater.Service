<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.7.2" />
  </startup>
  <appSettings>
    <!-- Update Settings -->
    <add key="XmlConfigFileName" value="XmlConfig.xml" />
    <!-- UpdateIntervalInMinutes must be GREATER THAN MinimalUpdateIntervalInMinutes in XmlConfig, if both values are EQUAL it will not update until next cycle -->
    <add key="UpdateIntervalInMinutes" value="6" />
    <add key="MonitorStatusInMinutes" value="1" />
    <add key="ClientTimeoutInMinutes" value="1" />
    <add key="ForceUpdateInDays" value="30" />
    <!-- Notification -->
    <add key="FromEmail" value="xxxxxxxx@gmail.com" />
    <add key="ToEmail" value="xxxxxxxx@gmail.com" />
    <add key="Password" value="password" />
    <add key="Subject" value="[DnsUpdater] IP has been updated" />
    <add key="Host" value="smtp.gmail.com" />
    <add key="Port" value="587" />
    <!-- EnablePasswordEncryption is to protect the Notification's "Password" in this App.config and XmlConfig.xml's "SecretKey".  To use this: 
         1. Set this flag to true
         2. Update your own ConfigHelper.EncryptionKey and 
         3. Use Des3.Encrypt() to encrypt your plaintext Password/SecretKey -->
    <add key="EnablePasswordEncryption" value="false" />
    <!--
    This AWSProfileName was added automatically when using NuGet Update to the latest version of AWS SDK 
    
    AWSProfileName is used to reference an account that has been registered with the SDK.
        If using AWS Toolkit for Visual Studio then this value is the same value shown in the AWS Explorer.
        It is also possible to register an account using the <solution-dir>/packages/AWSSDK-X.X.X.X/tools/account-management.ps1 PowerShell script
        that is bundled with the nuget package under the tools folder.

		<add key="AWSProfileName" value="" />
    -->
    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <loggingConfiguration name="Logging Application Block" tracingEnabled="true" defaultCategory="General">
    <listeners>
      <!--	Rolling file listener as Text Formatter  -->
      <add name="RollingFile" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.RollingFlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="c:\Logs\DnsUpdaterService\DnsUpdaterService.log" footer="" formatter="TextFormatter" header="" rollFileExistsBehavior="Increment" rollInterval="Midnight" />
      <!--	Logging errors file, records errors encountered by the logging system	  -->
      <add name="ErrorsFile" type="Microsoft.Practices.EnterpriseLibrary.Logging.TraceListeners.FlatFileTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging,Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.FlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging,Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" fileName="c:\Logs\DnsUpdaterService\DnsUpdaterError.log" />
    </listeners>
    <!-- Formatter using server local time, remove local from template to use UTC -->
    <formatters>
      <add name="TextFormatter" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=6.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" template="{timestamp(local:yyyy-MM-dd HH:mm:ss)} {category} {priority} {message}" />
    </formatters>
    <!-- Category Sources -->
    <categorySources>
      <add switchValue="All" name="General">
        <listeners>
          <add name="RollingFile" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <!-- allEvents: Intentionally not bind to any listener -->
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category">
        <listeners>
          <add name="RollingFile" />
        </listeners>
      </notProcessed>
      <errors switchValue="All" name="Logging Errors and Warnings">
        <listeners>
          <add name="ErrorsFile" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.6.0" newVersion="4.0.6.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>